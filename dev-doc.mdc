---
alwaysApply: false
---

# Development Documentation Rule

## 嚴禁測試相關內容

請幫我產出一份開發文檔，要求如下：
嚴禁包含或生成任何形式的測試腳本、測試代碼、測試數據或自動化測試步驟（例如 unit/integration/E2E 測試、Jest、pytest、Cypress、Playwright、Postman collections 等）。測試將由人工審查與驗證處理，文檔中如需提及測試，僅能以一句話標註「由人工驗證」。
新增Techstack標註文檔中要用到的技術規範。
限制規則：輸出內容僅能包含以下三個章節：
- 開發目標
- 功能 Tree Check List
- 其他輸出規格
除了上述三個章節外，不得新增任何額外章節或標題。

## 文檔結構要求

### 1) 開發目標（簡述）

以 3–6 句 清楚、實際描述本次要解決的技術問題與功能需求。
禁止模糊用詞：不得使用「優化」「改善」「提升」等空泛表述，必須明確寫出要實際實作的功能或方法，例如「增加快取層以減少資料庫查詢次數」「新增一個檔案上傳 API 並限制檔案大小與類型」等。
需要描述技術方式/具體手段，例如：將採用哪種演算法、資料結構、設計模式或外部服務。
不需提及使用者族群、不需成功衡量指標、不需時間預估。

### 2) 功能 Tree Check List（必要時補充說明）

以「樹狀 + 待辦核取」格式列出所有功能與子功能。

每個節點必須 標註涉及的檔案或 function，並且標明是「新增」還是「更動」：

- 新增檔案：以 (新增: xxx.js, yyyService.ts) 表示
- 更動檔案/函式：以 (更動: existingUserModel.updateUser()) 表示

所有說明必須具體，並以工程可執行為標準。不得使用模糊詞（如「優化」「改善」「提升」「調整」「支援」「改進」「加強」「簡化」等），必須直接描述具體技術方案、方法、程式邏輯或檔案修改內容。說明必須標註特殊

## 範例格式

```
- [ ] 主要功能 A (主要功能說明)
  - [ ] 子功能 A1 (新增: A1Service.js) （說明：需要先建立資料庫連線）
  - [ ] 子功能 A2 (更動: existingService.updateA2())(說明：)
- [ ] 主要功能 B(主功能說明)
  - [ ] 子功能 B1 (新增: B1Controller.js, B1Model.js)(說明：)
  - [ ] 子功能 B2 (更動: existingController.handleB2())(說明：)
```

### 3) 最終完成目錄架構:

專案資料夾/
├── 模組A/
│   └── 程式碼1.py
├── 模組B/
│   └── 程式碼2.py
├── 主程式.py
└── 測試/
    └── 測試程式.py


## 注意事項

- 絕對不能包含任何測試相關的程式碼或腳本
- 測試相關內容僅能以「由人工驗證」一句話帶過
- 必須清楚標註每個功能涉及的檔案和函式
- 必須區分新增和更動的內容
- 必須簡化所有更動的內容
- 所有說明必須具體，並以工程可執行為標準。不得使用模糊詞（如「優化」「改善」「提升」「調整」「支援」「改進」「加強」「簡化」等），必須直接描述具體技術方案、方法、程式邏輯或檔案修改內容。
